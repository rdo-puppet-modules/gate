---
- job:
    name: opm-ci-upstream-changes
    scm:
        - gitnetics
        - opm-gate
    triggers:
        - daily-once
        - upstream-gerrit-merge-event
    builders:
        - shell: |
            PROJECTS_CONF="gate/configurations/gitnetics/projects.yaml"
            PROJECTS_DIR="$WORKSPACE/projects"
            mkdir -p $PROJECTS_DIR

            base_command="python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR"
            if [ -n "$GERRIT_PROJECT" ]; then
                # triggered by gerrit event
                $base_command --projects $GERRIT_PROJECT --branches $GERRIT_BRANCH poll-original
            else
                # triggered by timer
                $base_command poll-original
            fi

- job:
    name: opm-ci-midstream-patches-newpatch
    scm:
        - gitnetics
        - opm-gate
    triggers:
        - replica-gerrit-patches-create-event
        - daily-once
    builders:
        - shell: |
            mkdir -p $PROJECTS_DIR
            base_command="python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR"
            if [ -n "$GERRIT_PROJECT" ]; then
                # triggered by gerrit event
                $base_command --projects $GERRIT_PROJECT --change-id $GERRIT_CHANGE poll-replica
            else
                # triggered by timer
                $base_command poll-replica
            fi

- job:
    name: opm-ci-midstream-recombination-tests
    scm:
        - gitnetics
        - opm-gate
        - khaleesi
        - khaleesi-settings
    triggers:
        - replica-gerrit-recombination-create-event
        - daily-once
    publishers:
        - archive-results
    builders:
        - shining-panda:
            system-site-packages: true
            python-version: system-CPython-2.7
            build-environment: virtualenv
            command: |
                #pip install -U ansible; ansible --version
                pip install markupsafe

                source khaleesi-settings/jenkins/ansible_settings.sh
                export CONFIG_BASE=$WORKSPACE/khaleesi-settings
                export ANSIBLE_CALLBACK_PLUGINS=$WORKSPACE/khaleesi/plugins/callbacks
                export KHALEESI_LOG_PATH=$WORKSPACE/ansible_log
                export ANSIBLE_LOG_PATH=/tmp/ansible.log
                export KHALEESI_VERBOSE=true
                source $WORKSPACE/../../private-exports

                cat > khaleesi-settings/settings/provisioner/centosci/site/default/user/openstack-puppet.yml << EOF
                provisioner:
                    remote_user: root
                    key_file: !join [ !env HOME, /.ssh/id_rsa]
                installer:
                    type: opm
                EOF

                # install ksgen
                pushd khaleesi/tools/ksgen/
                python setup.py develop
                popd

                PROJECTS_CONF="$WORKSPACE/gate/configurations/gitnetics/projects.yaml"
                PROJECTS_DIR="$WORKSPACE/projects"
                TESTS_BASEDIR="$WORKSPACE/tests/"

                for dir in $TESTS_BASEDIR $PROJECTS_DIR; do
                    mkdir -p $dir
                done

                base_command="python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR"

                if [ -n "$GERRIT_PROJECT" ]; then
                    # triggered by gerrit event
                    $base_command --projects $GERRIT_PROJECT prepare-tests --recombination-id $GERRIT_CHANGE --tests-base-dir $TESTS_BASEDIR
                else
                    # triggered by timer or by user
                    $base_command prepare-tests --tests-base-dir $TESTS_BASEDIR
                fi

                pushd khaleesi
                for test_info_file in $(find $TESTS_BASEDIR -name vars.yaml); do
                    ksgen --config-dir=$CONFIG_BASE/settings generate \
                        --provisioner=centosci \
                        --provisioner-site=default \
                        --provisioner-site-user=openstack-puppet \
                        --provisioner-distro=centos \
                        --provisioner-distro-version=7 \
                        --distro=centos-7.0 \
                        --installer=opm \
                        --installer-topology=aio \
                        --job=opm \
                        --product=rdo \
                        --product-version=kilo \
                        --product-version-repo=delorean \
                        --extra-vars @$TESTS_BASEDIR/project-vars.yaml \
                        --extra-vars tests_sources=$WORKSPACE/gate/tests \
                        --extra-vars tests_basedir=$TESTS_BASEDIR \
                        --extra-vars @$test_info_file \
                        ksgen_settings.yml

                    ./run.sh -vvvv --use ksgen_settings.yml playbooks/installer/opm/main.yml
                    ./run.sh -vvvv --use ksgen_settings.yml playbooks/cleanup.yml
                done
                popd

                if [ -n "$GERRIT_PROJECT" ]; then
                    # triggered by gerrit event
                    $base_command --projects $GERRIT_PROJECT vote-recombinations --recombination-id $GERRIT_CHANGE --tests-base-dir $TESTS_BASEDIR
                else
                    # triggered by timer or by user
                    $base_command vote-recombinations --tests-base-dir $TESTS_BASEDIR
                fi

- job:
    name: opm-ci-merge-recombinations
    scm:
        - gitnetics
        - opm-gate
    triggers:
        - replica-gerrit-recombination-vote-event
        - daily-once
    builders:
        - shell: |
            PROJECTS_CONF="gate/configurations/gitnetics/projects.yaml"
            PROJECTS_DIR="$WORKSPACE/projects"
            mkdir -p $PROJECTS_DIR
            base_command="python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR merge-recombinations"
            if [ -n "$GERRIT_PROJECT" ]; then
                # triggered by gerrit event
                $base_command --projects $GERRIT_PROJECT --recombination-id $GERRIT_CHANGE
            else
                # triggered by timer
                $base_command
            fi

- job:
    name: opm-ci-repos-maintenance
    scm:
        - gitnetics
        - opm-gate
    triggers:
        - daily-once
    builders:
        - shell: |
            PROJECTS_CONF="gate/configurations/gitnetics/projects.yaml"
            PROJECTS_DIR="$WORKSPACE/projects"
            mkdir -p $PROJECTS_DIR

            python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR cleanup

- job:
    name: opm-ci-midstream-package
    scm:
        - gitnetics
        - opm-gate
        - khaleesi
        - khaleesi-settings
    triggers:
        - replica-gerrit-recombination-merge-event
    builders:
        - shining-panda:
            system-site-packages: true
            python-version: system-CPython-2.7
            build-environment: virtualenv
            command: |
                source khaleesi-settings/jenkins/ansible_settings.sh
                export CONFIG_BASE=$WORKSPACE/khaleesi-settings
                export ANSIBLE_CALLBACK_PLUGINS=$WORKSPACE/khaleesi/plugins/callbacks
                export KHALEESI_LOG_PATH=$WORKSPACE/ansible_log
                export ANSIBLE_LOG_PATH=/tmp/ansible.log
                export KHALEESI_VERBOSE=true
                source $WORKSPACE/../../private-exports

                cat > khaleesi-settings/settings/provisioner/centosci/site/default/user/openstack-puppet.yml << EOF
                provisioner:
                    remote_user: root
                    key_file: !join [ !env HOME, /.ssh/id_rsa]
                installer:
                    type: opm
                EOF


                pushd khaleesi

                # install ksgen
                pushd tools/ksgen/
                python setup.py develop
                popd

                ksgen --config-dir=$CONFIG_BASE/settings generate \
                      --provisioner=centosci \
                      --provisioner-site=default \
                      --provisioner-site-user=openstack-puppet \
                      --provisioner-distro=centos \
                      --provisioner-distro-version=7 \
                      --distro=centos-7.0 \
                      --installer=opm \
                      --installer-topology=aio \
                      --job=opm \
                      --product=rdo \
                      --product-version=kilo \
                      --product-version-repo=delorean \
                      --extra-vars @projects-vars.yaml \
                      --extra-vars local_spec_dir=$WORKSPACE/gate/specs/ \
                      --extra-vars spec_dir=/root/rpmbuild/SPECS \
                      --extra-vars sources_dir=/root/rpmbuild/SOURCES \
                      --extra-vars workspace=$WORKSPACE \
                     ksgen_settings.yml

                ./run.sh -vvvv --use ksgen_settings.yml playbooks/installer/opm/package.yml
                ./run.sh -vvvv --use ksgen_settings.yml playbooks/cleanup.yml
    publishers:
        - archive:
            artifacts: '*.rpm'

